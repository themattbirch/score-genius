name: Package ScoreGenius Appx

on:
  workflow_dispatch:

jobs:
  package-appx:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inspect expected PackageRoot location
        shell: pwsh
        run: |
          Write-Output "Current working directory:"
          pwd
          Write-Output "Verifying frontend/windows_package/PackageRoot exists..."
          if (Test-Path 'frontend/windows_package/PackageRoot') {
            Write-Output "✅ Found PackageRoot"
            Get-ChildItem 'frontend/windows_package/PackageRoot' -Recurse -Depth 2 | ForEach-Object { Write-Output $_.FullName }
          } else {
            Write-Output "❌ PackageRoot missing at frontend/windows_package/PackageRoot"
            Get-ChildItem -Recurse -Depth 2 | ForEach-Object { Write-Output $_.FullName }
            throw "Cannot proceed: frontend/windows_package/PackageRoot not found."
          }

      - name: Package Appx and sign
        shell: pwsh
        env:
          PFX_B64: ${{ secrets.SCOREGENIUS_PFX_B64 }}
          PFX_PASSWORD: ${{ secrets.SCOREGENIUS_PFX_PASSWORD }}
        run: |
          $packageRoot = 'frontend/windows_package/PackageRoot'
          $outputPackage = 'ScoreGenius_1.10.0.0.appx'

          # Decode base64 PFX into a file if provided
          if ($env:PFX_B64) {
            $pfxPath = "$PWD\scoregenius.pfx"
            [System.IO.File]::WriteAllBytes($pfxPath, [System.Convert]::FromBase64String($env:PFX_B64))
            Write-Output "Decoded .pfx to $pfxPath"
          } else {
            $pfxPath = $null
            Write-Output "No PFX base64 provided; skipping signing later."
          }

          # Locate latest MakeAppx.exe and signtool.exe
          $makeappx = Get-ChildItem 'C:\Program Files (x86)\Windows Kits\10\bin\' -Recurse -Filter MakeAppx.exe |
            Sort-Object FullName -Descending | Select-Object -First 1
          $signtool = Get-ChildItem 'C:\Program Files (x86)\Windows Kits\10\bin\' -Recurse -Filter signtool.exe |
            Sort-Object FullName -Descending | Select-Object -First 1

          if (-not $makeappx) { throw "MakeAppx.exe not found." }

          Write-Output "Using MakeAppx: $($makeappx.FullName)"
          if ($signtool) {
            Write-Output "Using SignTool: $($signtool.FullName)"
          } else {
            Write-Output "SignTool missing; cannot sign even if PFX exists."
          }

          # Pack
          & $makeappx.FullName pack /d $packageRoot /p $outputPackage

          if (-not (Test-Path $outputPackage)) {
            throw "Packaging failed; appx not produced."
          }

          # Sign if we have both signtool and the decoded PFX
          if ($signtool -and $pfxPath) {
            Write-Output "Signing package..."
            & $signtool.FullName sign /fd SHA256 /a /f $pfxPath /p $env:PFX_PASSWORD $outputPackage
          } else {
            Write-Output "Skipping signing (missing signtool or PFX)."
          }

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: scoregenius-appx
          path: ScoreGenius_1.10.0.0.appx
