# .github/workflows/backend_ci.yml

name: Backend CI

on:
  workflow_dispatch: {}
  push:
    branches: [master]
    paths:
      - "backend/**"
      - "supabase/**"
      - ".github/workflows/backend_ci.yml"
  pull_request:
    branches: [master]
    paths:
      - "backend/**"
      - "supabase/**"
      - ".github/workflows/backend_ci.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint-sql:
    name: Lint Handwritten SQL Migrations
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python (for sqlfluff)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip for sqlfluff
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-sqlfluff-${{ hashFiles('backend/requirements.txt') }}

      - name: Install sqlfluff
        run: |
          python -m pip install --upgrade pip
          pip install "sqlfluff[jinja]"

      - name: Lint handwritten SQL migrations only
        run: |
          echo "Finding handwritten migrations to lint..."
          files=$(find supabase/migrations -maxdepth 1 \
            -type f \
            -regex '.*/[0-9]{3}_.*\.sql' \
            | sort)
          if [[ -z "$files" ]]; then
            echo "No migrations to lint, skipping."
            exit 0
          fi
          echo "$files" | sed 's/^/  • /'
          sqlfluff lint $files

  test-migrations:
    name: Test DB Migrations & Materialized View
    runs-on: ubuntu-latest
    needs: lint-sql
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase local dev services
        run: supabase start

      - name: Wait for Postgres readiness
        run: |
          for i in {1..10}; do
            if pg_isready -h 127.0.0.1 -p 54322 -U postgres; then
              echo "Postgres is ready"
              break
            fi
            sleep 3
          done

      - name: Reset & apply migrations
        run: |
          PGSSLMODE=disable supabase db reset

      - name: Refresh Materialized View
        run: |
          PGPASSWORD=postgres \
          psql -h 127.0.0.1 -p 54322 -U postgres -d postgres \
            -c "REFRESH MATERIALIZED VIEW public.team_rolling_20;"

      - name: Basic SELECT test on MatView
        run: |
          PGPASSWORD=postgres \
          psql -h 127.0.0.1 -p 54322 -U postgres -d postgres \
            -c "SELECT COUNT(*) FROM public.team_rolling_20;"

      - name: Stop Supabase local services
        if: always()
        run: supabase stop --no-backup

  test-python-backend:
    name: Test Python Backend Code
    runs-on: ubuntu-latest
    needs: test-migrations
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip for Python deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-python-${{ hashFiles('backend/requirements.txt') }}

      - name: Install Python dependencies
        run: pip install -r backend/requirements.txt

      - name: Lint only changed Python code
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          git fetch origin master
          echo "Linting diff against master…"
          ruff check --diff origin/master...HEAD

      - name: Run Pytest Tests
        run: |
          cd backend
          pytest tests/

  auto-fix-python-lint:
    name: Auto-Fix Python Lint Errors
    runs-on: ubuntu-latest
    needs: test-python-backend
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install latest Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff auto-fix
        run: |
          echo "Running ruff fix on backend/…"
          ruff fix backend/

      - name: Create PR with fixes (if any)
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: auto-fix Python lint errors via Ruff"
          branch: auto/ruff-fixes/${{ github.sha }}
          title: "Auto-fix Python lint errors"
          labels: auto-lint
          body: |
            This PR was generated by CI to apply automatic Python lint fixes.
