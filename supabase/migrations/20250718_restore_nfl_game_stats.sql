-- 20250718_restore_nfl_game_stats.sql
-- Restore + harden nfl_historical_game_stats schema
-- Includes: table create (if missing), column type enforcement, unique(game_id),
--           DB-managed updated_at (default + trigger), helpful indexes.

BEGIN;

-- ──────────────────────────────────────────────────────────────────────────────
-- 1. Base table definition (created only if missing)
--    If the table already exists, this will no-op; subsequent blocks normalize it.
-- ──────────────────────────────────────────────────────────────────────────────
CREATE TABLE IF NOT EXISTS public.nfl_historical_game_stats (
  id              bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  game_id         integer    NOT NULL,
  season          integer,
  stage           text,
  week            integer,
  game_date       date,
  game_time       time,
  game_timestamp  bigint,
  venue_name      text,
  venue_city      text,
  home_team_id    integer,
  home_team_name  text,
  away_team_id    integer,
  away_team_name  text,
  home_q1         integer,
  home_q2         integer,
  home_q3         integer,
  home_q4         integer,
  home_ot         integer,
  away_q1         integer,
  away_q2         integer,
  away_q3         integer,
  away_q4         integer,
  away_ot         integer,
  home_score      integer,
  away_score      integer,
  updated_at      timestamptz
);

-- ──────────────────────────────────────────────────────────────────────────────
-- 2. Ensure all columns exist + correct types (idempotent guarded DO block)
--    (Casts are best‑effort; if bad data exists, adjust USING expressions.)
-- ──────────────────────────────────────────────────────────────────────────────
DO $$
BEGIN
  -- updated_at column (older broken tables lacked it)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public'
      AND table_name   = 'nfl_historical_game_stats'
      AND column_name  = 'updated_at'
  ) THEN
    ALTER TABLE public.nfl_historical_game_stats
      ADD COLUMN updated_at timestamptz;
  END IF;

  -- enforce integer type for week (handles cases where it drifted to text)
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema='public' AND table_name='nfl_historical_game_stats'
      AND column_name='week' AND data_type <> 'integer'
  ) THEN
    BEGIN
      ALTER TABLE public.nfl_historical_game_stats
        ALTER COLUMN week TYPE integer
        USING NULLIF(regexp_replace(week::text, '\D','','g'), '')::int;
    EXCEPTION WHEN others THEN
      RAISE NOTICE 'week type enforcement skipped (manual cleanup may be required)';
    END;
  END IF;
END $$;

-- ──────────────────────────────────────────────────────────────────────────────
-- 3. Unique constraint on game_id (required for upsert(..., "game_id"))
-- ──────────────────────────────────────────────────────────────────────────────
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_constraint
    WHERE conname = 'nfl_historical_game_stats_game_id_key'
      AND conrelid = 'public.nfl_historical_game_stats'::regclass
  ) THEN
    ALTER TABLE public.nfl_historical_game_stats
      ADD CONSTRAINT nfl_historical_game_stats_game_id_key UNIQUE (game_id);
  END IF;
END $$;

-- ──────────────────────────────────────────────────────────────────────────────
-- 4. DB‑managed updated_at (default + trigger)
-- ──────────────────────────────────────────────────────────────────────────────
ALTER TABLE public.nfl_historical_game_stats
  ALTER COLUMN updated_at SET DEFAULT timezone('utc', now());

CREATE OR REPLACE FUNCTION public.set_updated_at()
RETURNS trigger AS $fn$
BEGIN
  NEW.updated_at = timezone('utc', now());
  RETURN NEW;
END;
$fn$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS trg_set_updated_at_nfl_game_stats
  ON public.nfl_historical_game_stats;

CREATE TRIGGER trg_set_updated_at_nfl_game_stats
BEFORE INSERT OR UPDATE ON public.nfl_historical_game_stats
FOR EACH ROW EXECUTE FUNCTION public.set_updated_at();

-- ──────────────────────────────────────────────────────────────────────────────
-- 5. Helpful indexes
-- ──────────────────────────────────────────────────────────────────────────────
CREATE INDEX IF NOT EXISTS idx_nfl_game_stats_game_id
  ON public.nfl_historical_game_stats (game_id);

CREATE INDEX IF NOT EXISTS idx_nfl_game_stats_season_week
  ON public.nfl_historical_game_stats (season, week);

COMMIT;

-- ──────────────────────────────────────────────────────────────────────────────
-- 6. (Optional, run separately) Backfill updated_at where null
-- UPDATE public.nfl_historical_game_stats
-- SET updated_at = timezone('utc', now())
-- WHERE updated_at IS NULL;
-- ──────────────────────────────────────────────────────────────────────────────
